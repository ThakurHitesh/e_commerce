# Generated by Django 2.2 on 2020-01-29 13:26

import api.models.services
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=100, verbose_name='email address')),
                ('country_code', models.PositiveIntegerField()),
                ('contact_no', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('image', models.ImageField(blank=True, default='profile_default_image.jpg', null=True, upload_to='profile_images')),
                ('user_type', models.CharField(choices=[('buyer', 'buyer'), ('seller', 'seller'), ('admin', 'admin')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'unique_together': {('email', 'user_type')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('total_items', models.PositiveIntegerField(default=0)),
                ('buyer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Buyer')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('checkout_order_id', models.CharField(max_length=32)),
                ('shipping_address', models.TextField(max_length=500)),
                ('total_amount', models.PositiveIntegerField()),
                ('order_created_at', models.DateTimeField(default=api.models.services.now)),
                ('order_status', models.CharField(choices=[('placed', 'placed'), ('paid', 'paid'), ('shipped', 'shipped'), ('delivered', 'delivered')], default='placed', max_length=20)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Cart')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('product_id', models.CharField(max_length=32)),
                ('base_price', models.PositiveIntegerField()),
                ('seller_price', models.PositiveIntegerField(blank=True, null=True)),
                ('discount', models.PositiveIntegerField(default=0)),
                ('categories', models.ManyToManyField(to='api.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Whishlist',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('total_items', models.PositiveIntegerField(default=0)),
                ('buyer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Buyer')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='reviews_images')),
                ('rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Buyer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductQuestions',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('question', models.TextField(max_length=200)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Buyer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Product')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Seller'),
        ),
        migrations.CreateModel(
            name='WhislistItem',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('added_on', models.DateTimeField(default=api.models.services.now)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Product')),
                ('wishlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Whishlist')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='product_images')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Product')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.CreateModel(
            name='ProductAnswers',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('answer', models.TextField(max_length=300)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Buyer')),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.ProductQuestions')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('payment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('currency', models.CharField(choices=[('INR', 'INR')], default='INR', max_length=10)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('order_id', models.CharField(blank=True, max_length=50, null=True)),
                ('method', models.CharField(blank=True, max_length=100, null=True)),
                ('card_id', models.CharField(blank=True, max_length=50, null=True)),
                ('cname', models.CharField(blank=True, max_length=100, null=True)),
                ('last4', models.CharField(blank=True, max_length=4, null=True)),
                ('cnetwork', models.CharField(blank=True, max_length=100, null=True)),
                ('ctype', models.CharField(blank=True, max_length=100, null=True)),
                ('bank', models.CharField(blank=True, max_length=100, null=True)),
                ('wallet', models.CharField(blank=True, max_length=100, null=True)),
                ('vpa', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact', models.BigIntegerField(blank=True, null=True)),
                ('notes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('cart_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Order')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('gift_wrap', models.BooleanField(default=False)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Product')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=api.models.services.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('address', models.TextField(max_length=500)),
                ('house_name', models.CharField(blank=True, max_length=30, null=True)),
                ('house_no', models.IntegerField(blank=True, null=True)),
                ('landmark', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.IntegerField()),
                ('address_type', models.CharField(choices=[('home', 'home'), ('work', 'work')], default='home', max_length=20)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Buyer')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
                'index_together': {('id', 'created_at', 'deleted_at')},
            },
        ),
    ]
